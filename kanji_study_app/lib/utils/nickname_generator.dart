import 'dart:convert';
import 'package:crypto/crypto.dart';

class NicknameGenerator {
  static final NicknameGenerator _instance = NicknameGenerator._internal();
  static NicknameGenerator get instance => _instance;
  
  NicknameGenerator._internal();
  
  // Secret key for consistent hash generation
  static const String _secretKey = 'kanji_study_app_nickname_generator_2024';
  
  // Korean adjectives
  final List<String> _adjectives = [
    // 색상
    '빨간', '파란', '노란', '초록', '보라', '하얀', '검은', '분홍', '주황', '하늘색',
    '연두색', '갈색', '회색', '금색', '은색', '무지개', '남색', '연보라', '진홍색', '청록색',
    '베이지', '민트색', '코랄색', '라벤더', '올리브', '버건디', '네이비', '카키색', '연분홍', '진파랑', '옥색',
    
    // 크기/형태
    '큰', '작은', '긴', '짧은', '넓은', '좁은', '높은', '낮은', '두꺼운', '얇은',
    '둥근', '네모난', '뾰족한', '거친', '매끈한', '동그란', '길쭉한', '납작한', '통통한', '날씬한',
    '뚱뚱한', '홀쭉한', '볼록한', '오목한', '반듯한', '직선의', '곡선의', '각진',
    
    // 감정/성격
    '행복한', '즐거운', '신나는', '귀여운', '멋진', '훌륭한', '용감한', '씩씩한', '당당한', '활발한',
    '명랑한', '친절한', '다정한', '상냥한', '온화한', '성실한', '정직한', '똑똑한', '영리한', '유쾌한',
    '발랄한', '경쾌한', '산뜻한', '밝은', '희망찬', '적극적인', '진취적인', '창의적인', '독창적인', '우아한',
    
    // 속도/상태
    '빠른', '느린', '가벼운', '무거운', '따뜻한', '시원한', '차가운', '뜨거운', '새로운', '오래된',
    '깨끗한', '빛나는', '투명한', '선명한', '또렷한', '찬란한', '눈부신', '환한', '밝은', '어두운',
    '그윽한', '은은한', '포근한', '아늑한', '편안한', '안락한', '고요한', '잔잔한', '강력한', '튼튼한',
    '견고한', '안전한', '든든한', '확실한',
    
    // 맛/감각
    '달콤한', '고소한', '상큼한', '시원한', '쫄깃한', '바삭한', '촉촉한', '향긋한', '진한', '연한',
    '풍부한', '신선한', '건강한', '맛있는', '특별한', '담백한', '구수한', '얼큰한', '칼칼한', '새콤한',
    '달달한', '짭짤한', '풍성한', '넉넉한', '푸짐한', '알찬', '든든한',
    
    // 자연/계절
    '봄같은', '화창한', '맑은', '청명한', '상쾌한', '푸른', '활기찬', '천연의', '햇살같은', '별빛같은',
    '달빛같은', '바람같은', '물결같은', '구름같은', '꽃같은', '나무같은',
    
    // 감각/느낌
    '따스한', '서늘한', '쾌적한', '상큼한', '개운한', '후련한', '뿌듯한', '예쁜', '고운', '수려한',
    '단아한', '청초한', '화려한', '소박한',
  ];
  
  // Korean nouns  
  final List<String> _nouns = [
    // 과일
    '사과', '바나나', '포도', '딸기', '수박', '멜론', '체리', '복숭아', '오렌지', '키위',
    '망고', '레몬', '자몽', '귤', '감', '배', '자두', '살구', '무화과', '석류',
    '코코넛', '두리안', '용과', '리치', '구아바', '파파야',
    
    // 동물
    '강아지', '고양이', '토끼', '햄스터', '다람쥐', '펭귄', '돌고래', '판다', '코알라', '기린',
    '얼룩말', '사자', '호랑이', '곰', '여우', '늑대', '원숭이', '코끼리', '하마', '악어',
    '거북이', '독수리', '올빼미', '백조', '앵무새', '참새', '비둘기', '까치', '제비', '두루미',
    '황새', '나비', '벌', '잠자리', '개구리', '도마뱀',
    
    // 자연
    '나무', '꽃', '구름', '별', '달', '태양', '무지개', '바람', '산', '바다',
    '강', '호수', '하늘', '숲', '들판', '정원', '계곡', '폭포', '동굴', '섬',
    '반도', '만', '해변', '모래사장', '초원', '평원', '고원', '분지', '빙하', '화산',
    '온천', '장미', '튤립', '해바라기', '백합', '국화', '수국', '라일락', '난초', '선인장',
    '민들레', '클로버', '데이지', '팬지',
    
    // 음식
    '빵', '케이크', '쿠키', '도넛', '초콜릿', '사탕', '푸딩', '피자', '햄버거', '파스타',
    '라면', '김밥', '떡볶이', '치킨', '와플', '마카롱', '타르트', '파이', '머핀', '스콘',
    '베이글', '프레첼', '에클레어', '슈크림', '샐러드', '수프', '리조또', '그라탕', '오믈렛', '키쉬',
    '타코', '스시', '덮밥', '우동', '소바', '라멘', '돈가스', '카레', '짜장면',
    
    // 사물
    '책', '연필', '풍선', '공', '인형', '블록', '퍼즐', '자전거', '피아노', '기타',
    '북', '종', '시계', '거울', '가방', '모자', '신발', '양말', '장갑', '목도리',
    '우산', '선글라스', '카메라', '망원경', '현미경', '나침반', '지도', '지구본', '달력', '액자',
    '램프', '촛불', '전등', '손전등', '랜턴', '조명', '컴퓨터', '태블릿', '헤드폰', '스피커',
    '마이크', '키보드', '마우스',
    
    // 장소
    '집', '학교', '공원', '놀이터', '도서관', '카페', '가게', '병원', '우체국', '은행',
    '극장', '박물관', '미술관', '수영장', '운동장', '광장', '마을', '도시', '시장', '백화점',
    '쇼핑몰', '편의점', '서점', '약국', '식당', '빵집', '주스바', '찻집', '놀이공원', '동물원',
    '수족관', '식물원', '천문대', '과학관', '역사관', '체험관', '해수욕장', '캠핑장', '펜션', '호텔',
    '리조트', '온천', '스파', '사우나',
    
    // 보석/광물
    '루비', '에메랄드', '진주', '산호', '호박', '수정', '자수정', '황수정', '장미수정', '흑수정',
    '오팔', '터키석', '문스톤',
    
    // 계절/날씨
    '봄', '여름', '가을', '겨울', '아침', '점심', '저녁', '밤', '새벽', '황혼',
    '노을', '일출', '일몰', '정오', '한낮', '한밤', '눈', '비', '이슬', '서리',
    '안개', '구름', '천둥', '번개',
    
    // 취미/스포츠
    '축구', '야구', '농구', '배구', '테니스', '탁구', '배드민턴', '골프', '수영', '다이빙',
    '서핑', '스키', '스노보드', '등산', '캠핑', '요가', '댄스', '발레', '태권도', '유도',
    '검도', '양궁',
  ];
  
  /// Generate a nickname based on user ID
  String generate(String userId) {
    // Create SHA256 hash from userId + secret key
    final bytes = utf8.encode(userId + _secretKey);
    final digest = sha256.convert(bytes);
    final hash = digest.toString();
    
    // Get indices from hash
    final adjIndex = int.parse(hash.substring(0, 8), radix: 16) % _adjectives.length;
    final nounIndex = int.parse(hash.substring(8, 16), radix: 16) % _nouns.length;
    final number = (int.parse(hash.substring(16, 24), radix: 16) % 10000).toString().padLeft(4, '0');
    
    // Create nickname
    return '${_adjectives[adjIndex]} ${_nouns[nounIndex]} $number';
  }
  
  /// Validate nickname format
  bool validateFormat(String nickname) {
    final pattern = RegExp(r'^[가-힣]+ [가-힣]+ \d{4}$');
    return pattern.hasMatch(nickname);
  }
  
  /// Get the number of possible combinations
  int getPossibleCombinations() {
    return _adjectives.length * _nouns.length * 10000;
  }
}